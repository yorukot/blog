---
import { Icon } from "astro-icon/components";
import { getLangFromUrl, useTranslations, getExperiences, getExperienceTypes } from "@/i18n/utils";

const currentLocale = getLangFromUrl(Astro.url);
const t = useTranslations(currentLocale);
const experiences = getExperiences();
const typeIcons = getExperienceTypes();
---

<div class="container mx-auto px-4">
  <section class="py-6 md:py-12">
    <div class="relative z-10 w-full max-w-6xl mx-auto">
      <!-- Section Header -->
      <div class="text-left mb-8">
        <h2 class="text-2xl md:text-3xl lg:text-4xl font-bold mb-3 text-text">
          <span style="color: var(--color-primary);">{t('experience.title')}</span>
        </h2>
        <p class="text-base md:text-lg text-text-muted leading-relaxed">
          {t('experience.subtitle')}
        </p>
      </div>

      <!-- Experience Timeline -->
      <div class="relative space-y-3">
        {experiences.map((experience, index) => {
          const typeInfo = typeIcons[experience.type as keyof typeof typeIcons];
          return (
          <div class="relative flex items-start space-x-3 group cursor-pointer">
            <!-- Timeline Icon -->
            <div class="flex-shrink-0 mt-0.5 relative z-10">
              <div 
                class="w-8 h-8 rounded-full flex items-center justify-center transition-all duration-300 group-hover:scale-110 group-hover:w-10 group-hover:h-10"
                style={`background: ${typeInfo.color}20; border: 2px solid ${typeInfo.color};`}
              >
                <Icon 
                  name={typeInfo.icon}
                  class="w-4 h-4 transition-all duration-300 group-hover:w-5 group-hover:h-5"
                  style={`color: ${typeInfo.color};`}
                />
              </div>
            </div>

            <!-- Experience Content -->
            <div 
              class="flex-1 p-3 rounded-xl transition-all duration-300 group-hover:p-4 group-hover:-translate-y-0.5 group-hover:bg-bg-highlight"
            >
              <!-- Always visible header -->
              <div class="flex items-center justify-between">
                <h3 class="text-base md:text-lg font-bold text-text transition-all duration-300 group-hover:text-lg group-hover:md:text-xl">
                  {t(`experience.${experience.id}.title` as any)}
                </h3>
                <span class="text-xs text-text-muted ml-3 flex-shrink-0">
                  {experience.date}
                </span>
              </div>

              <!-- Hover-only content -->
              <div class="overflow-hidden transition-all duration-300 max-h-0 group-hover:max-h-20 group-hover:mt-2">
                <div class="flex items-center space-x-2 mb-2">
                  <span 
                    class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium"
                    style={`background: ${typeInfo.color}20; color: ${typeInfo.color};`}
                  >
                    {experience.type}
                  </span>
                </div>
                <p class="text-sm text-text-muted leading-relaxed">
                  {t(`experience.${experience.id}.description` as any)}
                </p>
              </div>
            </div>

            <!-- Connecting Line (except for last item) -->
            {index < experiences.length && (
              <div 
                class="absolute left-4 top-10 w-0.5 h-6 z-0 transition-all duration-300 group-hover:left-5 group-hover:h-8"
                style="background: var(--color-bg-card);"
              >
              </div>
            )}
          </div>
        )})}
      </div>
    </div>
  </section>
</div>
