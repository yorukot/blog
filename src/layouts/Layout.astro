---
import '../styles/global.css';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import { config } from '@/config';

export interface Props {
  title?: string;
  lang?: string;
  description?: string;
  image?: string;
}

const {
  title = 'Yorukot - Student & Full-Stack Developer',
  lang = 'en',
  description = '17-year-old full-stack developer with 6 years of experience, creating CLI/TUI tools and web apps. Passionate about open-source, anime, and sharing knowledge.',
  image = '/favicon.svg',
} = Astro.props;
---

<!doctype html>
<html lang={lang} class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <meta name="author" content="Yorukot" />
    <meta name="theme-color" content="#0f0f0f" />

    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:site_name" content="Yorukot" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={image} />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <!-- Sitemap and RSS Feed -->
    <link rel="sitemap" href="/sitemap.xml" />
    <link rel="alternate" type="application/rss+xml" href="/rss.xml" />

    <!-- Google Analytics -->
    {config.analytics.googleAnalytics && (
      <>
        <script async src={`https://www.googletagmanager.com/gtag/js?id=${config.analytics.googleAnalytics}`}></script>
        <script is:inline define:vars={{ gaId: config.analytics.googleAnalytics }}>
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());
          gtag('config', gaId);
        </script>
      </>
    )}
  </head>
  <body class="bg-bg min-h-screen">
    <Header />
    <slot />
    <Footer />

    <script>
      // Add copy buttons to markdown code blocks
      function addCopyButtons() {
        const codeBlocks = document.querySelectorAll(
          '.markdown-content pre, .code-tabs-container pre'
        );

        codeBlocks.forEach((pre) => {
          // Skip if button already exists
          if (pre.querySelector('.copy-button')) return;

          const code = pre.querySelector('code');
          if (!code) return;

          // Create copy button
          const copyButton = document.createElement('button');
          copyButton.className = 'copy-button';
          copyButton.setAttribute('aria-label', 'Copy code');
          copyButton.setAttribute('title', 'Copy code');

          // Add copy icon SVG
          copyButton.innerHTML = `
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <rect width="14" height="14" x="8" y="8" rx="2" ry="2"/>
              <path d="m4 16c-1.1 0-2-.9-2-2v-10c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/>
            </svg>
          `;

          // Add click handler
          copyButton.addEventListener('click', async () => {
            try {
              await navigator.clipboard.writeText(code.textContent || '');

              // Show success feedback
              const originalContent = copyButton.innerHTML;
              copyButton.innerHTML = `
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path d="M20 6L9 17l-5-5"/>
                </svg>
              `;
              copyButton.classList.add('copied');

              setTimeout(() => {
                copyButton.innerHTML = originalContent;
                copyButton.classList.remove('copied');
              }, 2000);
            } catch (err) {
              console.error('Failed to copy code:', err);
            }
          });

          pre.appendChild(copyButton);
        });
      }

      // Initialize when DOM loads
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', addCopyButtons);
      } else {
        addCopyButtons();
      }

      // Re-initialize after page navigation (for Astro)
      document.addEventListener('astro:page-load', addCopyButtons);

      // Re-initialize when CodeTabs content changes
      document.addEventListener('codetab:changed', addCopyButtons);
    </script>
  </body>
</html>

<style>
  :global(html),
  :global(body) {
    margin: 0;
    width: 100%;
  }
</style>
